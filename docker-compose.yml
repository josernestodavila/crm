version: "3.7"
services:
  database:
    image: postgres:15.4-alpine
    environment: 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.0.10-alpine
    restart: always
    ports:
      - "56379:6379"
    command: redis-server --save 20 1 --loglevel warning
  crm:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: redis
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8081:8000"
    volumes:
      - ./:/opt/app:rw
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://127.0.0.1:8000/health/"]
      interval: 30s
      timeout: 5s
    command: python manage.py  runserver 0.0.0.0:8000
